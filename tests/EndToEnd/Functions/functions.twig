https://twig.symfony.com/doc/3.x/functions/min.html
{% assert_type min(1, 3, 2) "1" %}
{% assert_type min([1, 3, 2]) "1" %}
{% assert_type min({2: "e", 3: "a", 1: "b", 5: "d", 4: "c"}) "'a'" %}

https://twig.symfony.com/doc/3.x/functions/max.html
{% assert_type max(1, 3, 2) "3" %}
{% assert_type max([1, 3, 2]) "3" %}
{% assert_type max({2: "e", 3: "a", 1: "b", 5: "d", 4: "c"}) "'e'" %}

https://twig.symfony.com/doc/3.x/functions/range.html
{% assert_type range(0, 6, 2) "array{0, 2, 4, 6}" %}

https://twig.symfony.com/doc/3.x/functions/constant.html
{% assert_type constant('DATE_W3C') "'Y-m-d\\\\TH:i:sP'" %}

https://twig.symfony.com/doc/3.x/functions/cycle.html
{% assert_type cycle(['odd', 'even'], 1) "'even'" %}
{% assert_type cycle(['odd', 'even'], 2) "'odd'" %}

https://twig.symfony.com/doc/3.x/functions/random.html
{% assert_type random('ABC') 'string' %}
{% assert_type random(5) 'int<0, 5>' %}
{% assert_type random(50, 100)  'int<50, 100>' %}
{% assert_type random() 'int<0, max>' %}
{% assert_type random(null, 5) 'int<0, 5>' %}
{% assert_type random(['apple', 'orange', 'citrus']) "'apple'|'citrus'|'orange'" %}

https://twig.symfony.com/doc/3.x/functions/source.html
{% assert_type source('template.html') 'string' %}

https://twig.symfony.com/doc/3.x/functions/date.html
{% assert_type date('YYYY-MM-DD') 'DateTime' %}

https://twig.symfony.com/doc/3.x/functions/enum.html
{# {% assert_type enum('Fixtures\\Enum').SomeCase.value 'string' %} #}
{# {% assert_type enum('Fixtures\\Enum').cases() 'array' %} #}

https://twig.symfony.com/doc/3.x/functions/enum_cases.html
{% assert_type enum_cases('TwigStan\\Fixtures\\Enum') 'array{TwigStan\\Fixtures\\Enum::Foo, TwigStan\\Fixtures\\Enum::Bar}' %}
