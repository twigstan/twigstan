parameters:
	reportUnmatchedIgnoredErrors: true
	phpstan:
		configurationFile: phpstan.neon
		memoryLimit: null
	php:
		paths: []
		excludes: []
	twig:
		paths: []
		excludes: []
	baselineErrors: []
	ignoreErrors:
		-
			identifier: isset.variable

		-
			# It's perfectly fine to do `a == b ? 'yes' : 'no'` in Twig.
			identifier: equal.notAllowed

		-
			# It's perfectly fine to do `a != b ? 'no' : 'yes'` in Twig.
			identifier: notEqual.notAllowed

		-
			# The context is backed up before a loop and restored after it.
			# Therefore this is a non-issue in Twig templates.
			identifier: foreach.valueOverwrite

		-
			# When an array inside the context is not typed, this produces an error.
			message: '#__twigstan_context#'
			identifier: missingType.iterableValue

		-
			# When the variable that is passed does not exist, this produces an error.
			message: '#CoreExtension::ensureTraversable#'
			identifier: argument.templateType
services:
	-
		class: Twig\Environment
		factory: @TwigStan\Twig\TwigFactory::create
	- Symfony\Component\Filesystem\Filesystem
	- TwigStan\Application\AnalyzeCommand(
		environmentLoader: %environmentLoader%
		tempDirectory: %tempDir%
		currentWorkingDirectory: %currentWorkingDirectory%
		phpFilesFinder: TwigStan\Finder\FilesFinder(
			namePattern: *.php
			paths: %php.paths%
			exclusions: %php.excludes%
		)
		twigFilesFinder: TwigStan\Finder\FilesFinder(
			namePattern: *.twig
			paths: %twig.paths%
			exclusions: %twig.excludes%
		)
		givenFilesFinder: TwigStan\Finder\GivenFilesFinder(
			currentWorkingDirectory: %currentWorkingDirectory%
		)
	)
	- TwigStan\Application\PHPStanRunner(
		phpstanConfigurationFile: %phpstan.configurationFile%
		phpstanMemoryLimit: %phpstan.memoryLimit%
		currentWorkingDirectory: %currentWorkingDirectory%
	)
	- TwigStan\PHP\PrettyPrinter
	- TwigStan\PHP\StrictPhpParser
	- TwigStan\PHPStan\Analysis\AnalysisResultFromJsonReader
	- TwigStan\Error\ErrorCollapser
	- TwigStan\Error\ErrorFilter(
		ignoreErrors: %ignoreErrors%
	)
	- TwigStan\Error\BaselineErrorFilter(
		baselineErrors: %baselineErrors%
		reportUnmatchedIgnoredErrors: %reportUnmatchedIgnoredErrors%
	)
	- TwigStan\Error\ErrorToSourceFileMapper
	- TwigStan\Error\ErrorTransformer
	- TwigStan\Processing\Compilation\ModifiedCompiler
	- TwigStan\Processing\Compilation\Parser\TwigNodeParser
	- TwigStan\Processing\Compilation\TwigCompiler
	- TwigStan\Processing\Compilation\TwigGlobalsToPhpDoc
	- TwigStan\Processing\Compilation\TwigVisitor\DisableGetAttributeOptimizationVisitor
	- TwigStan\Processing\Compilation\TwigVisitor\RemoveProfilingNodeVisitor
	- TwigStan\Processing\Compilation\TwigVisitor\ReplaceIncludeNodeNodeVisitor
	- TwigStan\Processing\Compilation\TwigVisitor\ReplaceNameExpressionNodeVisitor
	- TwigStan\Processing\Compilation\TwigVisitor\ReplaceTypesNodeVisitor
	- TwigStan\Processing\Flattening\TwigFlattener
	- TwigStan\Processing\ScopeInjection\TwigScopeInjector
	- TwigStan\Processing\ScopeInjection\ArrayShapeMerger
	- TwigStan\Twig\DependencyFinder
	- TwigStan\Twig\DependencySorter
	- TwigStan\Twig\Metadata\MetadataAnalyzer
	- TwigStan\Twig\Metadata\MetadataRegistry
	- TwigStan\Twig\Node\NodeFinder
	- TwigStan\Twig\Node\NodeMapper
	- TwigStan\Twig\TokenParser\AssertTypeTokenParser
	- TwigStan\Twig\TokenParser\AssertVariableExistsTokenParser
	- TwigStan\Twig\TokenParser\DumpTypeTokenParser
	- TwigStan\Twig\TwigFactory(environmentLoader: %environmentLoader%)
	- TwigStan\Twig\TwigFileCanonicalizer
